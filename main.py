import pygamefrom sys import exitfrom particle import Particlefrom spring import Springpygame.init()WIDTH: int = 800HEIGHT: int = 700FPS: int = 60PURPLE: tuple = (116, 28, 227)BLACK: tuple = (17, 17, 17)WHITE: tuple = (240, 249, 225)FRICTION: float = 0.99screen = pygame.display.set_mode((WIDTH, HEIGHT))clock = pygame.time.Clock()particles: list = []springs: list = []spacing: int = 15gravity: pygame.math.Vector2 = pygame.math.Vector2(0, 0.02)k: float = 0.01for i in range(20):    particles.append(Particle(screen, WHITE, WIDTH // 2, i * spacing, 5))    if i != 0:        a = particles[i]        b = particles[i - 1]        spring = Spring(screen, BLACK, k, spacing, a, b, 2)        springs.append(spring)    i += 1particles[0].locked = Truewhile True:    tail = particles[-1]    for event in pygame.event.get():        if event.type == pygame.QUIT or (event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE):            pygame.quit()            exit()        if event.type == pygame.MOUSEBUTTONDOWN:            if event.button == 1:                tail.position = pygame.math.Vector2(event.pos[0], event.pos[1])                tail.velocity = pygame.math.Vector2(0, 0)        if event.type == pygame.MOUSEMOTION:            tail.position = pygame.math.Vector2(event.pos[0], event.pos[1])            tail.velocity = pygame.math.Vector2(0, 0)    screen.fill(PURPLE)    for s in springs:        s.show()        s.update()    for p in particles:        p.apply_force(gravity)        p.show()        p.update()    pygame.display.set_caption(f"{clock.get_fps() :.1f}")    pygame.display.flip()    pygame.display.update()    clock.tick(FPS)